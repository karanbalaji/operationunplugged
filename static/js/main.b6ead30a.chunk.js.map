{"version":3,"sources":["img/front.gif","img/001.png","img/002.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","theme","createTheme","primary","secondary","tertiary","quaternary","dataAge","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","dataIncome","Presentation","react_default","a","createElement","deck","transition","transitionDuration","controls","slide","bgImage","Zero","className","heading","size","fit","lineHeight","textColor","appear","components_text","textSize","bold","First","margin","es","interval","style","color","bgColor","react_chartjs_2_es","width","height","options","maintainAspectRatio","animation","duration","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","App_Presentation","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6ead30a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/front.272f9ec6.gif\";","module.exports = __webpack_public_path__ + \"static/media/001.7ab7955a.png\";","module.exports = __webpack_public_path__ + \"static/media/002.d01876af.png\";","// Import React\nimport React from 'react';\nimport TextLoop from \"react-text-loop\";\nimport {Doughnut, Bar} from 'react-chartjs-2';\nimport Zero from '../src/img/front.gif';\nimport First from '../src/img/001.png';\nimport Second from '../src/img/002.png';\nimport './App.css';\n\n\n\n// Import Spectacle Core tags\n\nimport {\n  BlockQuote,\n  Cite,\n  Deck,\n  Heading,\n\n  List,\n  ListItem,\n  Notes,\n  Quote,\n  Slide,\n  Text,\n  Appear\n} from 'spectacle';\n\n// Import theme\nimport createTheme from 'spectacle/lib/themes/default';\n\n// const images = {\n//   formidagon: require('../assets/formidable-logo.svg'),\n//   goodWork: require('../assets/good-work.gif')\n// };\n\n// Require CSS\n\n\nconst theme = createTheme(\n  {\n    primary: 'white',\n    secondary: '#1F2022',\n    tertiary: '#03A9FC',\n    quaternary: '#CECECE'\n    \n  },\n  {\n    primary: 'Montserrat',\n    secondary: 'Roboto'\n    \n  }\n);\nconst dataAge = {\n  labels: [\"0\",'0-11', '12-17', '18-24', '25-34', '35-44', '55-64', '65'],\n  datasets: [\n    {\n      label: 'Internet Users By Age',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: [0,55.1 , 97.7, 99.7, 98.3, 98.2, 94, 85, 53.4]\n    }\n  ]\n};\n\nconst dataIncome = {\n  labels: [\"No Income\",\"Less Than $30,000\",'$30,000-$49,999', '$50,000-$74,999', '$75,000'],\n  datasets: [\n    {\n      label: 'Internet Users By income',\n      \n      backgroundColor: 'rgba(46,204,113,0.2)',\n      borderColor: 'rgba(77, 175, 124, 1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: [0,31,22,14,9]\n    }\n  ]\n};\n\nconst data = {\n\tlabels: [\n\t\t'Less Than High School Graduates',\n\t\t'High School Graduates',\n    'Some College',\n    'College Graduates',\n\t],\n\tdatasets: [{\n\t\tdata: [39,22,21,10],\n\t\tbackgroundColor: [\n\t\t'#FF6384',\n\t\t'#36A2EB',\n\t\t'#FFCE56'\n\t\t],\n\t\thoverBackgroundColor: [\n\t\t'#FF6384',\n\t\t'#36A2EB',\n\t\t'#FFCE56'\n\t\t]\n\t}]\n};\n\nexport default class Presentation extends React.Component {\n  render() {\n    return (\n      <Deck\n        transition={['fade', 'slide']}\n        transitionDuration={500}\n        theme={theme}\n        controls={false}\n      >\n        <Slide transition={['slide']} bgImage={Zero}>\n        <div className='box'>\n          <Heading size={1} fit lineHeight={1} textColor=\"primary\">\n            Operation Unplugged\n          </Heading>\n          <Appear>\n            \n          <Text textSize='40px' textColor=\"#6ab04c\" bold>\n            Get the real world connected around us\n          </Text>\n          \n          </Appear>\n          </div>\n          \n\n        </Slide>\n\n        <Slide transition={['slide']} bgImage={First} margin=\"0.25em\">\n          <div className=\"box\">\n          <Heading size={1} fit lineHeight={1} textColor=\"primary\">\n            The Problem\n          </Heading>\n          <Appear>\n          <Text textSize='40px' textColor=\"primary\" bold>\n            People are too dependant on {\"\"}\n            <TextLoop interval={[1500]} >\n                    <span style={{color:'#FD297B'}}> technology</span>\n                    <span style={{color:'#3C5A99'}}> phone</span>\n                    <span style={{color:'#00e640'}}> computer</span>\n                    <span style={{color:'#00e624'}}> laptop</span>\n            </TextLoop>\n          </Text>\n          </Appear>\n          </div>\n        </Slide>\n\n        <Slide transition={['slide']} bgColor=\"primary\">\n        <Heading size={1} fit lineHeight={1} textColor=\"secondary\">\n            Who are they ?\n          </Heading>\n          <h4>Students, Working Professionals & Unemployed </h4>\n          <Doughnut data={data} />\n         \n        </Slide>\n\n        <Slide transition={['slide']} bgColor=\"primary\">\n          <Heading size={1} fit lineHeight={1} textColor=\"secondary\">\n            Users dependant on internet by age\n          </Heading>\n          <br></br>\n          <Appear>\n          <Bar\n          data={dataAge}\n          width={100}\n          height={50}\n          options={{\n            maintainAspectRatio: true,\n          \n            animation: {\n              duration: 5000,\n              }\n          }\n          }\n        />\n          </Appear>\n        </Slide>\n\n        <Slide transition={['slide']} bgColor=\"primary\">\n          <Heading size={1} fit lineHeight={1} textColor=\"secondary\">\n            Users dependant on internet by income\n          </Heading>\n          <br></br>\n          <Appear>\n          <Bar\n          data={dataIncome}\n          width={100}\n          height={50}\n          options={{\n            maintainAspectRatio: true,\n          \n            animation: {\n              duration: 5000,\n              }\n          }\n          }\n        />\n          </Appear>\n        </Slide>\n\n\n\n    \n\n          \n        \n        \n        \n      </Deck>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}